# -*- coding: utf-8 -*-
"""Python_basic_assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KkwgEhsRvTv8TAtnqPj49lGjznZENpZC
"""

# Problem 1: Understanding Data Types

# Integer variable
integer_var = 42
print("Integer_var is a ",type(integer_var))

# Float variable
float_var = 3.14
print("float_var is a ",type(float_var))

# String variable
string_var = "Hello my name is Aayush"
print("String_var is a ",type(string_var))

# Boolean variable
boolean_var = True
print("boolean_var is a ",type(boolean_var))

# Problem 2: Conditionals
a = int(input("Enter a number"))
if a%2 == 0:                          # if a is divisble 2 then it is an even number
  print("This is an even number")

elif a%3 == 0:                        # To check if the input number is divisible by 3
  print("This a multiple of 3")

else:
  print("this is an odd number")

b = int(input("Enter the year "))
if b%4 == 0:        # If the year is divisible by 4 it is a leap year, if not it is not a leap year
  print("Leap Year")

else:
  print("Not a leap year")

# Problem 3: Loops
c = int(input("Enter a number "))    # Enter a number
for i in range(1,11):
  result = c * i    # Result = input number x Range (1-10)
  print(f"{c} x {i} = {result}")

def fib(n):
  if n==0 or n==1: # base case
    return n
  else:
    return fib(n-1) + fib(n-2)
print(fib(10))

# Create a program that prints the following pattern using nested loops:
num_rows = 5  # Total rows


for i in range(1, num_rows + 1):   # represents each row, starting from 1 up to num_rows.
    for j in range(i):             # printing the row number (i) that many times.
        print(i, end="")           # prints the row number without moving to the next line
    print()

# Functions
def calculate_area(radius):
    return 3.14159 * (radius ** 2)    # Area = pie x radius square


radius = 5.0                          # area = 3.14 x 5 ** 2
area_result = calculate_area(radius)
print(area_result)

# Prime Number
def is_prime(number):
    if number < 2:                   # Number less than 2 cannot be a prime number
        return False
    for i in range(2, number):       #  It checks divisibility of the input number until "number - 1" ( if the number is 4 it will check if it is divisble upto 3)
        if number % i == 0:          # It checks if the number is divisble by the current number of i
            return False
    return True

# Example usage
user_input = int(input("Enter an integer: "))
result = is_prime(user_input)
print(result)

# calculate the average of a list of numbers

def calculate_average(numbers):
    if not numbers:
        return None
    return sum(numbers) / len(numbers)            # average = sum of numbers / total numbers


set1 = [5, 10, 15]
set2 = [2.5, 7.8, 12.3]
set3 = [100, 200, 300, 400]

average1 = calculate_average(set1)
average2 = calculate_average(set2)
average3 = calculate_average(set3)

print(f"Set 1: {average1}")
print(f"Set 2: {average2}")
print(f"Set 3: {average3}")

def calculate_power (number,power):
  return number ** power

number = int(input("Enter a number "))
power = int(input(" Enter the power "))
result = calculate_power(number,power)
print(result)

# Combining Concepts
first_num= int(input("Enter your first_num: "))
operator= input("Enter your operator (+, -, *, /, %): ")
second_num= int(input("Enter your second_num: "))

if operator== "+" :
  print(first_num + second_num)

elif operator== "-" :
  print(first_num - second_num)

elif operator== "*" :
  print(first_num * second_num)

elif operator== "/" :
  print(first_num / second_num)

elif operator== "%" :
  print(first_num % second_num)

else:
  print('Invalid operator')

import random
secret_number = random.randint(1, 100)    # random number between 1 and 100
guess = 0


while guess != secret_number:
  guess = int(input("Enter your guess (between 1 and 100): "))

    if guess < secret_number:
        print("Too low! Try again.")
    elif guess > secret_number:
        print("Too high! Try again.")
    else:
        print(f"Congratulations! You guessed the correct number")

# calculate the sum of even numbers in a list

def even_numbers(numbers):
    even_sum = 0
    for i in numbers:
        if i % 2 == 0:          # if i is divided by 2 then add that number
            even_sum += i
    return even_sum

# Example usage
user_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = even_numbers(user_list)
print(f"The sum of even numbers in the list is: {result}")

# find the maximum and minimum values in a list

def find_max_min(numbers):
    if not numbers:
        return None

    maximum_value = max(numbers)
    minimum_value = min(numbers)

    return maximum_value, minimum_value

# Example usage
l = [1,2,3,4,5,6,7,8,9,10]
result = find_max_min(l)
print(result)

